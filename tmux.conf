# Use Ctrl-A rather than Ctrl-B
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Put the status bar at the top
set -g status-position top

# Nicer status bar formatting
set -g status-bg '#777777'
set -g status-fg white
set -g window-status-separator '  '
setw -g window-status-format "#[bg=black] #I #[bg=#777777] #W "
setw -g window-status-current-format "#[bg=black] #I #[fg=black]#[bg=white] #W "

# Remove administrative debris (session name, hostname, time) from status bar
set -g status-left ''
set -g status-right '%l:%M'

# Make copy and paste work
set-option -g default-command '/usr/local/bin/reattach-to-user-namespace -l /bin/zsh'

# I think, if you turn on "Applications in terminal may access clipboard" in
# iTerm preferences, then you don't need these:
#
#   unbind-key -Tcopy-mode-vi Enter
#   bind-key -Tcopy-mode-vi Enter send-keys -X copy-pipe-and-cancel "/usr/local/bin/reattach-to-user-namespace pbcopy"

# Stop escape being annoyingly slow
set -sg escape-time 0

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Make sure vim can get focus events
set -g focus-events on

# Vim needs this to know which tmux to use
set-environment -g TMUX_COMMAND tmux

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Better pane splitting
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'
bind c new-window -c "#{pane_current_path}"

# Mouse works as expected
set -g mouse on

# Make 256 colors work properly
set -g default-terminal "screen-256color"
