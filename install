#!/bin/bash

set -o errexit

steps_dir="$(dirname "$0")/steps"
steps=(macos homebrew asdf zsh ssh git iterm2 kitty neovim warp zed)

red=$(tput setaf 1)
green=$(tput setaf 2)
reset=$(tput sgr0)

function echo_red {
  echo -e "${red}${1}${reset}"
}

function echo_green {
  echo -e "${green}${1}${reset}"
}

function link_file {
  if [[ -L "$2" ]]; then
    echo "$2 is already linked, skipping."
  elif [[ -e "$2" ]]; then
    echo_red "$2 already exists, skipping. (You might not want this, so check the file.)"
  else
    ln -s "$PWD/$1" "$2"
    echo "Linked $2"
  fi
}

function run_step {
  echo
  echo_green "Configuring $1..."
  # shellcheck disable=SC1090
  source "$steps_dir/$1.bash"
}

function run_all_steps {
  for step in "${steps[@]}"; do
    run_step "$step"
  done
}

function usage {
  echo "Usage:"
  echo "  export DOTFILES_ENV=home|work"
  echo "  install [step name]"
  echo
  echo "Run all steps:"
  echo "  install"
  echo
  echo "Run a single step:"
  echo "  install [step name]"
  echo
  echo "Available steps: ${steps[*]}"
  exit 1
}

if [[ $DOTFILES_ENV != "home" && $DOTFILES_ENV != "work" ]]; then usage; fi

if [[ $1 == "-h" || $1 == "--help" ]]; then
  usage
elif [[ -n $1 ]]; then
  run_step "$1"
else
  run_all_steps
fi

echo
echo_green "Install complete."
