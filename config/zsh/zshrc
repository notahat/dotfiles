function configure_environment {
  export PATH=/usr/bin:/bin:/usr/sbin:/sbin

  export CLICOLOR=1  # Make ls colour its output.
  export LESS=-R     # Make less support ANSI colour sequences.
}

function configure_prompt {
  NEWLINE=$'\n'

  PATH_PROMPT_INFO='%F{blue}%~%f'

  autoload -U vcs_info
  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:*' unstagedstr '*'
  zstyle ':vsc_info:*' check-for-staged-changes true
  zstyle ':vcs_info:*' stagedstr '+'
  zstyle ':vcs_info:*' formats '%F{green}[%b%u%c]%f'
  precmd () { vcs_info }

  setopt prompt_subst
  PROMPT='${NEWLINE}${PATH_PROMPT_INFO} ${vcs_info_msg_0_} %# '
}

function configure_vi_mode {
  bindkey -v
  KEYTIMEOUT=1

  bar_cursor() { echo -ne "\e[6 q" }
  block_cursor() { echo -ne "\e[2 q" }

  zle -N zle-line-init bar_cursor

  zle-keymap-select() {
    if [[ $KEYMAP = vicmd ]] {
      block_cursor
    } else {
      bar_cursor
    }
  }
  zle -N zle-keymap-select
}

function configure_completion {
  autoload -U compinit && compinit

  ZSH_AUTOSUGGEST_STRATEGY=(completion)

  source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
  source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

  # Make arrows and command mode j and k search the history.
  autoload -U up-line-or-beginning-search
  autoload -U down-line-or-beginning-search

  zle -N up-line-or-beginning-search
  zle -N down-line-or-beginning-search

  bindkey "^[[A" up-line-or-beginning-search
  bindkey "^[[B" down-line-or-beginning-search
  bindkey -M vicmd "k" up-line-or-beginning-search
  bindkey -M vicmd "j" down-line-or-beginning-search
}

function configure_history {
  HISTFILE=$HOME/.zsh_history
  HISTSIZE=10000
  SAVEHIST=10000
  setopt HIST_IGNORE_DUPS
  setopt APPEND_HISTORY
  setopt INC_APPEND_HISTORY
  setopt EXTENDED_HISTORY
}

function configure_aliases {
  alias reload='source ~/.zshrc'

  alias be='bundle exec'
  alias br='./bin/rails'

  alias cdr='cd $(git root)'

  alias ga='git add'
  alias gc='git commit'
  alias gco='git checkout'
  alias gd='git diff'
  alias gf='git fetch'
  alias gff='git merge --ff-only'
  alias gl='git log'
  alias gm='git merge --no-ff'
  alias gp='git push'
  alias gpr='git push -u && gh pr create --web'
  alias gb='gh pr view --web'
  alias gs='git status'

  alias zed='/usr/local/bin/zed'

  alias lvim='NVIM_APPNAME=lazyvim nvim'

  function autoruby {
    echo $1 | entr -c ruby $1
  }

  function autonode {
    echo $1 | entr -c node $1
  }

  function autorspec {
    echo $1 | entr -c ./up rspec $1
  }
}

function configure_homebrew {
  if [[ ! -f /opt/homebrew/bin/brew ]] return

  eval "$(/opt/homebrew/bin/brew shellenv)"

  FPATH=$HOMEBREW_PREFIX/share/zsh/site-functions:$FPATH

  export HOMEBREW_NO_ENV_HINTS=true
  export EDITOR=$HOMEBREW_PREFIX/bin/nvim
}

function configure_asdf {
  if [[ ! -f $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh ]] return

  source $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh

  if [[ -d ~/.asdf/plugins/java/ ]] {
    source ~/.asdf/plugins/java/set-java-home.zsh
  }
}

function configure_work_stuff {
  if [[ ! -v $ANDROID_HOME ]] {
    export ANDROID_HOME=$HOME/Library/Android/sdk
    export PATH=$ANDROID_HOME/emulator:$PATH
    export PATH=$ANDROID_HOME/tools:$PATH
    export PATH=$ANDROID_HOME/tools/bin:$PATH
    export PATH=$ANDROID_HOME/platform-tools:$PATH
    export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
  }

  if [[ ! -v $ANDROID_SDK_ROOT ]] {
    export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
    export PATH=$ANDROID_SDK_ROOT/emulator:$PATH
    export PATH=$ANDROID_SDK_ROOT/tools:$PATH
    export PATH=$ANDROID_SDK_ROOT/tools/bin:$PATH
    export PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH
    export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
  }

  if [[ -f ~/src/up/.zsh-up-completion/init.zsh ]] {
    source ~/src/up/.zsh-up-completion/init.zsh
  }
}

configure_environment

if [[ ! -v WARP_IS_LOCAL_SHELL_SESSION ]] {
  # We don't need these in Warp, coz it has its own equivalents.
  configure_prompt
  configure_vi_mode
  configure_completion
  configure_history
}

configure_aliases
configure_homebrew
configure_asdf
configure_work_stuff
